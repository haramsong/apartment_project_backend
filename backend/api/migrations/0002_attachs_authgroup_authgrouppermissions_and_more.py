# Generated by Django 4.2.6 on 2023-10-26 06:09

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachs',
            fields=[
                ('idx', models.AutoField(db_column='IDX', db_comment='인덱스 값', primary_key=True, serialize=False)),
                ('reg_date', models.DateTimeField(db_column='REG_DATE', db_comment='등록일')),
                ('upload_path', models.CharField(db_column='UPLOAD_PATH', db_comment='파일 경로', max_length=200)),
                ('file_name', models.CharField(db_column='FILE_NAME', db_comment='파일 이름', max_length=200)),
                ('file_type', models.TextField(db_column='FILE_TYPE', db_comment='이미지 파일 여부[ 0(이미지 파일), 1(이미지 파일X) ]')),
                ('content_type', models.TextField(db_column='CONTENT_TYPE', db_comment='게시물 타입 [ B(BOARD_CONTENTS), C(COMPLAINT_CONTENTS), S(SHAREPLACE_CONTENTS) ]')),
            ],
            options={
                'db_table': 'ATTACHS',
                'db_table_comment': '첨부파일',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoardContents',
            fields=[
                ('idx', models.AutoField(db_column='IDX', db_comment='인덱스 값', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='TITLE', db_comment='제목', max_length=30)),
                ('content', models.TextField(db_column='CONTENT', db_comment='본문 내용')),
                ('usergroup_idx', models.IntegerField(db_column='USERGROUP_IDX', db_comment='주민 그룹 IDX')),
                ('cnt', models.IntegerField(db_column='CNT', db_comment='조회수')),
                ('attach', models.TextField(blank=True, db_column='ATTACH', db_comment='첨부파일 idx', null=True)),
                ('blind_flag', models.CharField(db_column='BLIND_FLAG', db_comment='블라인드 flag', max_length=1)),
                ('like_cnt', models.IntegerField(db_column='LIKE_CNT', db_comment='좋아요 수')),
                ('created_at', models.DateTimeField(db_column='CREATED_AT', db_comment='생성일')),
                ('updated_at', models.DateTimeField(db_column='UPDATED_AT', db_comment='수정일')),
                ('user_idx', models.IntegerField(db_column='USER_IDX', db_comment='주민 IDX')),
            ],
            options={
                'db_table': 'BOARD_CONTENTS',
                'db_table_comment': '주민게시판',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Danjis',
            fields=[
                ('code', models.CharField(db_column='CODE', db_comment='단지 코드', max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', db_comment='단지명', max_length=30)),
                ('tel', models.CharField(db_column='TEL', db_comment='전화번호', max_length=11)),
                ('address', models.CharField(db_column='ADDRESS', db_comment='주소', max_length=300)),
                ('greeting', models.CharField(db_column='GREETING', db_comment='단지 소개', max_length=300)),
                ('profile_img', models.BinaryField(blank=True, db_column='PROFILE_IMG', db_comment='단지 썸네일 이미지', null=True)),
            ],
            options={
                'db_table': 'DANJIS',
                'db_table_comment': '단지',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroups',
            fields=[
                ('idx', models.AutoField(db_column='IDX', db_comment='인덱스 값', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', db_comment='그룹명', max_length=30)),
                ('content', models.CharField(db_column='CONTENT', db_comment='그룹 소개', max_length=300)),
                ('public_flag', models.TextField(db_column='PUBLIC_FLAG', db_comment='공개 여부 flag')),
                ('danji_code', models.IntegerField(db_column='DANJI_CODE', db_comment='단지 코드')),
                ('created_at', models.DateTimeField(db_column='CREATED_AT', db_comment='생성일')),
                ('created_by', models.IntegerField(db_column='CREATED_BY', db_comment='생성자')),
                ('updated_at', models.DateTimeField(db_column='UPDATED_AT', db_comment='수정일')),
                ('updated_by', models.IntegerField(db_column='UPDATED_BY', db_comment='수정자')),
            ],
            options={
                'db_table': 'USER_GROUPS',
                'db_table_comment': '주민 그룹',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Item',
        ),
    ]
